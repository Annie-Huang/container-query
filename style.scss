* {
  box-sizing: border-box;
}

html {
  height: 100%;
}

body {
  font-family: "Poppins", sans-serif;
}

img {
  display: block;
  max-width: 100%;
}

.content {
  padding: 2em;
  width: 100%;
  max-width: 70rem;
  margin-inline: auto;
}

.content {
  display: flex;
  flex-direction: column;
  gap: 2em;

  @media (min-width: 60em) {
    flex-direction: row;
  }
}

h1,
h2,
h3,
h4 {
  margin: 0;
  color: #234;
}

h1 {
  font-size: clamp(3rem, calc(10vw + 1rem), 6rem);
}

p {
  color: hsl(0 0% 0% / 0.85);
  line-height: 1.6;
}

*:where(:last-child) {
  margin-bottom: 0;
}

.card {
  // It means this is self-isolate container, and we will use inline (not block) with it.
  // From Kevin's first comment, now we need to have the keyword 'style' to be able to see it.
  contain: layout style inline-size;

  width: 100%;
  box-shadow: 0 0.25em 0.75em hsl(0 0% 0% / 0.15);

  img {
    object-fit: cover;
  }

  &__content {
    padding: 0.75rem;
  }
}
.card-container {
  display: flex;
  flex-direction: column;
}

// When the window size becomes smaller, the aside card will stack on the bottom, and
// now at this time, there is enough room for the whole row, so the .card-container will lay as flex-direction: row
@container (min-width: 25rem) {
  .card-container {
    border: 1px solid red;
    flex-direction: row;
  }
}

aside {
  flex-basis: 50%;
  gap: 2em;
}

.aside-content {
  display: flex;
  gap: 2em;
  flex-direction: column;
}
